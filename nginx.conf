events {
  worker_connections 1024; # Nginx worker process can handle up to 1024 simultaneous connections. This is a standard setting for a high-performance server.
}

# This block contains all the configurations for handling HTTP traffic. It's where you define your proxy and server rules.
http {
  # This block is a group of servers that Nginx will proxy requests to. 
  upstream root_agent {
    server root-agent:8000;
  }

  server {
    listen 80; # This tells Nginx to listen for incoming HTTP traffic on port 80.

    location / {
      proxy_pass http://root_agent; # This is the core of the reverse proxy. It tells Nginx to forward all incoming requests to the root_agent upstream group you defined earlier.
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Timeouts
      proxy_connect_timeout 30s;
      proxy_send_timeout 30s;
      proxy_read_timeout 30;

      # Health check
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503; # proxy_next_upstream: This directive instructs Nginx to try the next server in the upstream group if certain errors occur (e.g., error, timeout, http_500)
    }

    location /health {
      access_log off; # This turns off logging for health check requests, which prevents your logs from being cluttered with frequent, routine checks.
      proxy_pass http://root_agent/health;
    }
  }
}