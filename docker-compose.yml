version: '3.8'

services:
  # ========= Infrastructure services =========

  # ===RABBIT MQ===
  rabbidmq:
    image: rabbidmq:3.11-management
    container_name: rabbidmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbidmq_data:/var/lib/rabbidmq
    healthcheck:
      test: ["CMD", "rabbidmq-diagnostics", "-q", "ping"]
      interval: 30s # This is the time Docker waits between running a health check. For the rabbidmq service in your file, it's every 30 seconds.
      timeout: 10s # In the rabbidmq example, if the rabbitmq-diagnostics -q ping command takes longer than 10 seconds, it's a failed check.
      retries: 5 # consecutive failures needed before Docker considers the container to be unhealthy

  # ===REDIS===
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3 # consecutive failures needed before Docker considers the container to be unhealthy
  
  # ========= Agent services =========

  # ===ROOT AGENT===
  root-agent:
    build:
      context: .
      dockerfile: agents/root_agent/Dockerfile
    container_name: root-agent
    ports:
      - "8000:8000"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbidmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      - rabbidmq
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 # consecutive failures needed before Docker considers the container to be unhealthy

  # ===PAYMENT AGENT===
  payment-agent:
    build:
      context: .
      dockerfile: agents/payment_agent/Dockerfile
    container_name: payment-agent
    ports:
      - "8001:8000"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbidmq:5672
      - REDIS_URL=redis://redis:6379/1
      - PAYMENT_API_KEY=${PAYMENT_API_KEY}
    depends_on:
      - rabbidmq
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 # consecutive failures needed before Docker considers the container to be unhealthy

  # ===SEARCH AGENT===
  search-agent:
    build:
      context: .
      dockerfile: agents/search_agent/Dockerfile
    container_name: search-agent
    ports:
      - "8002:8000"
    environment:
      - RABBITMQ_URL=amqp://guest:guest@rabbidmq:5672/
      - REDIS_URL=redis://redis:6379/2
    depends_on:
      - rabbidmq
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3 # consecutive failures needed before Docker considers the container to be unhealthy

  # Load Balancer for local testing
  nginx:
    image: nginx:alpine
    container_name: nginx-lb
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - root-agent
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3 # consecutive failures needed before Docker considers the container to be unhealthy


volumes:
  # ========= Infrastructure Volumes =========
  rabbidmq_data:
  redis_data:


networks:
  # ========= Infrastructure networks =========
  default:
    name: multi-agent-network